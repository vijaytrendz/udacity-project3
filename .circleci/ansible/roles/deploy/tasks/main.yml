---
  - name: "show remote environment"
    shell: env

  - name: "Create directory"
    become: true
    file:
      path: /home/ubuntu/uda_app
      state: directory
      owner: ubuntu
      group: ubuntu
      mode: 0755

#  - name: Install the package "tar/unzip"
#    apt:
#      name: unzip
#      state: present
      
#  - name: Install the package "tar/unzip"
#    apt:
#      name: tar
#      state: present      

  - name: Copy backend files
    become: true
    copy:
      src: /root/project/backend.tar.gz
      dest: /home/ubuntu/uda_app/
      owner: ubuntu
      group: ubuntu
      mode: 0755


#  - name: "copy backend binaries"
#    become: true
#    synchronize:
#      src: ../../backend/dist
#      dest: /home/ubuntu/uda_app
#      recursive: true

#  - name: "copy backend file"
#    become: true
#    copy:
#      src: /root/project/backend
#      dest: /home/ubuntu/uda_app
#      force: no

#  - name: "copy node_modules"
#    become: true
#    synchronize:
#      src: /root/project/backend/
#      dest: /home/ubuntu/uda_app
#      recursive: true


  - name: "Check for tar file"
    become: true
    command:
      ls -l /home/ubuntu/uda_app/backend.tar.gz

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
       remote_src: yes
       src: /home/ubuntu/uda_app/backend.tar.gz
       dest: /home/ubuntu/uda_app
#       exclude:
#         - "root"
#         - "project"
#       extra_opts:
#         - "backend"

#  - name: "Extract tar"
#    become: true
#    unarchive:
#       remote_src: yes
#       src: /home/ubuntu/uda_app/backend.tar.gz
#       dest: /home/ubuntu/uda_app
#       exclude:
#         - "root"
#         - "project"
#       extra_opts:
#         - "backend"

  - name: "Check"
    become: true
    command:
      ls -l /home/ubuntu/uda_app/backend

  - name: "delete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true

  - name: "start server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: /home/ubuntu/uda_app/dist
    environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"